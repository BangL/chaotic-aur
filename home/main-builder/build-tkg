#!/usr/bin/env bash
# Wine helpers
wine_setup() {
	git checkout customization.cfg PKGBUILD

	export _USE_DXVKGI='true'
	if [ "$3" = 'true' ]; then
		export _USE_DXVKGI='false'
	fi

	sed -i'' "
	s/_COMPILEWITH=\"[^\"]*\"/_COMPILEWITH=\"zapcc\"/g
	s/_OPTIONAL_MARCHFLAG=\"[^\"]*\"/_OPTIONAL_MARCHFLAG=\"\"/g
	s/_NUKR=\"[^\"]*\"/_NUKR=\"false\"/g
	s/_NOINITIALPROMPT=\"[^\"]*\"/_NOINITIALPROMPT=\"true\"/g
	s/_use_staging=\"[^\"]*\"/_use_staging=\"$1\"/g
	s/_use_pba=\"[^\"]*\"/_use_pba=\"$2\"/g
	s/_use_vkd3d=\"[^\"]*\"/_use_vkd3d=\"$3\"/g
	s/_dxvk_dxgi=\"[^\"]*\"/_dxvk_dxgi=\"$_USE_DXVKGI\"/g
	s/_use_faudio=\"[^\"]*\"/_use_faudio=\"$4\"/g
	" customization.cfg

	local _SRCINFO=$(makepkg -o --noprepare --printsrcinfo)
	export _PKGNAME=$(echo "$_SRCINFO" | grep -Po '(?<=pkgname = )(.*)$')

	echo "[build-tkg] customization setted to: ${_PKGNAME}"
	
	export TARGET_EXTRAPKGS='ccache'
}

kernel_setup() {
	git checkout customization.cfg PKGBUILD

	sed --debug -i'' "
	s/_NUKR=\"[^\"]*\"/_NUKR=\"false\"/g
	s/_modprobeddb=\"[^\"]*\"/_modprobeddb=\"false\"/g
	s/_cpusched=\"[^\"]*\"/_cpusched=\"pds\"/g
	s/_ftracedisable=\"[^\"]*\"/_ftracedisable=\"true\"/g
	s/_numadisable=\"[^\"]*\"/_numadisable=\"true\"/g
	s/_voluntary_preempt=\"[^\"]*\"/_voluntary_preempt=\"true\"/g
	s/_acs_override=\"[^\"]*\"/_acs_override=\"true\"/g
	s/_ksm_uksm=\"[^\"]*\"/_ksm_uksm=\"true\"/g
	s/_bcachefs=\"[^\"]*\"/_bcachefs=\"true\"/g
	s/_bfqmq=\"[^\"]*\"/_bfqmq=\"true\"/g
	s/_processor_opt=\"[^\"]*\"/_processor_opt=\"generic\"/g
	s/_smt_nice=\"[^\"]*\"/_smt_nice=\"true\"/g
	s/_random_trust_cpu=\"[^\"]*\"/_random_trust_cpu=\"true\"/g
	s/_runqueue_sharing=\"[^\"]*\"/_runqueue_sharing=\"mc\"/g
	s/_timer_freq=\"[^\"]*\"/_timer_freq=\"750\"/g
	s/_user_patches=\"[^\"]*\"/_user_patches=\"false\"/g
	" customization.cfg

	echo '[build-tkg] applied kernel customization'
	
	export TARGET_EXTRAPKGS='ccache'
}

wine_makepkg() {
	export TARGET_UPPER='wine'
	export TARGET_NUKE=0
	export TARGET_EXTRAPKGS='zapcc ccache'
        ~/chaotic-makepkg \
		--noconfirm --sign \
                $@
	~/chaotic-add
}

# Clone TKG
cd /tmp
rm -rf TkG
git clone https://github.com/Tk-Glitch/PKGBUILDS.git TkG
cd TkG

# Build Wine
if [ -z "$TKG_NOWINE" ]; then
cd wine-tkg-git
for VARIATION in 'false false false false' 'false true false false' 'true true false false' 'true false false false' 'false false true false' 'true false true false' 'false false false true' 'false true false true' 'true true false true' 'true false false true' 'false false true true' 'true false true true'
do
        wine_setup $VARIATION
	
	wine_makepkg -sc || continue
	
	sed -i'' "
	s/_EXTERNAL_INSTALL=\"[^\"]*\"/_EXTERNAL_INSTALL=\"true\"/g
	s/_EXTERNAL_INSTALL_TYPE=\"[^\"]*\"/_EXTERNAL_INSTALL_TYPE=\"opt\"/g
	" customization.cfg
	
	echo "[build-tkg] customization setted to: ${_PKGNAME/%-git/-opt-git}"

	ln -srf "src/${_PKGNAME}-32-build" "src/${_PKGNAME/%-git/-opt-git}-32-build"
	ln -srf "src/${_PKGNAME}-64-build" "src/${_PKGNAME/%-git/-opt-git}-64-build"
	
	wine_makepkg -R
done

cd ..
sudo rm -rf wine-tkg-git
unset TARGET_UPPER TARGET_NUKE
fi

# Build Linux
if [ -z "$TKG_NO420" ]; then
cd linux420-tkg
kernel_setup
~/chaotic-makepkg --sign --noconfirm -C
~/chaotic-add
cd ..
fi
if [ -z "$TKG_NO50" ]; then
cd linux50-tkg
kernel_setup
~/chaotic-makepkg --sign --noconfirm -C
~/chaotic-add
fi

# Clean anything else
echo '[build-tkg] Nuking everything'
cd /tmp
sudo rm -rf TkG
