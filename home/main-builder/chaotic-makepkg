#!/usr/bin/env sh
if [[ -z "$(echo "$@" | grep '\-p \./tmp')" ]]; then
	if [[ -z "$(echo "$@" | grep '\-\-sign')" ]]; then
		echo 'This is used in a repo, where is --sign ??'
		exit -1
	fi

	# * Defaults
	BUILD_USER='main-builder'
	CHROOT='/tmp/chaotic-chroot2'
	CHSRC="$HOME/chaotic-chroot"
	BASE='base-root'
	BASE_PKGS='base-devel'
	TARGET="$PWD"
	TARGET_UPPER="${TARGET_UPPER:-tmp.$(uuidgen)}"
	TARGET_NUKE=${TARGET_NUKE:-1}

	BASE_RUN="sudo arch-chroot -u root $CHROOT/$BASE"
	if [[ ! -d "$CHROOT/$BASE" ]]; then
		# Create infra
		echo '[chaotic-makepkg] Bulding lowerdir...'
		mkdir -p "$CHROOT/$BASE"
		echo $$ > "$CHROOT/$BASE.lock"
		pushd "$CHROOT"

		# Basic packages
		sudo pacstrap "./$BASE" $BASE_PKGS

		# Build settings
		sudo cp "$CHSRC/makepkg.conf" "./$BASE/etc/makepkg.conf" 
		sudo cp "$CHSRC/pacman.conf" "./$BASE/etc/pacman.conf" 
		sudo cp "$CHSRC/local-makepkg" "./$BASE/usr/local/bin/"

		# Minimum locale
		echo "en_US.UTF-8 UTF-8" | sudo tee "./$BASE/etc/locale.gen"
		echo "LANG=en_US.UTF-8" | sudo tee "./$BASE/etc/locale.conf"
		sudo ln -rsf "./$BASE/usr/share/zoneinfo/America/Sao_Paulo" "./$BASE/etc/localtime"
		$BASE_RUN locale-gen

		# Build User
		$BASE_RUN useradd -u $(id -u $BUILD_USER) -m -G users -s /bin/bash $BUILD_USER
		echo "$BUILD_USER ALL=(ALL) NOPASSWD: ALL" | sudo tee -a "./$BASE/etc/sudoers"

		# Finish
		sudo mount --bind /srv "./$BASE/srv"
		$BASE_RUN pacman -Sy
		$BASE_RUN pacman -Scc --noconfirm
		$BASE_RUN mkdir -p /srv
		sudo umount "./$BASE/srv"
		popd
		rm "$CHROOT/$BASE.lock"
	else
		while [[ -f "$CHROOT/$BASE.lock" ]]; do
			sleep 1
			#wait $(cat "$CHROOT/$BASE.lock")
		done
		echo $$ > "$CHROOT/$BASE.lock"
		echo '[chaotic-chroot] Updating lowerdir...'
		sudo mount --bind /srv "$CHROOT/$BASE/srv"
		$BASE_RUN pacman -Syu --noconfirm
		$BASE_RUN pacman -Scc --noconfirm
		sudo umount "$CHROOT/$BASE/srv"
		rm "$CHROOT/$BASE.lock"
	fi

	echo '[chaptic-makepkg] Grabbing pkgname(s*)'
	_PKGNAME="$(makepkg --printsrcinfo | grep -Po '(?<=pkgname = )(.*)$')"

	TARGET_RUN="sudo systemd-nspawn -M $(echo "$_PKGNAME" | head -n 1) -u $BUILD_USER -D $CHROOT/$TARGET_UPPER/root"
	if [[ ! -d "$CHROOT/$TARGET_UPPER/root/usr" ]]; then
		echo '[chaotic-makepkg] Building chroot'
		mkdir -p "$CHROOT/$TARGET_UPPER/"{up,work,root}
		pushd "$CHROOT/$TARGET_UPPER"
		
		# TODO: Adjust to add multi-lib and/or zapcc
		LOWER="$CHROOT/$BASE"

		# Minimal mount
		sudo mount overlay -t overlay -olowerdir=$LOWER,upperdir=./up,workdir=./work ./root
		sudo mount --bind /srv ./root/srv

		# Other mounts
		$TARGET_RUN mkdir -p /home/$BUILD_USER/{pkgwork,.gnupg,.ccache,pkgdest}
		sudo mount --bind "$TARGET" "./root/home/$BUILD_USER/pkgwork"
		sudo mount --bind "/home/$BUILD_USER/.gnupg" "./root/home/$BUILD_USER/.gnupg"
		sudo mount --bind "/home/$BUILD_USER/.ccache" "./root/home/$BUILD_USER/.ccache"

		# Finish
		popd
	else
		echo '[chaotic-chroot] Updating chroot'
		$TARGET_RUN sudo pacman -Syu --noconfirm
		$TARGET_RUN sudo pacman -Scc --noconfirm
	fi

	# Threats VCs
	if [[ ! -z "$(echo "$_PKGNAME" | grep -P '\-git$')" ]]; then
		$TARGET_RUN sudo pacman -S --needed --noconfirm git
	fi
	if [[ ! -z "$(echo "$_PKGNAME" | grep -P '\-svn$')" ]]; then
		$TARGET_RUN sudo pacman -S --needed --noconfirm subversion
	fi
	if [[ ! -z "$(echo "$_PKGNAME" | grep -P '\-bzr$')" ]]; then
		$TARGET_RUN sudo pacman -S --needed --noconfirm bzr
	fi

	# Threats multilib
	if [[ ! -z "$(echo "$_PKGNAME" | grep -P '^lib32\-')" ]]; then
		$TARGET_RUN sudo pacman -S --needed --noconfirm multilib-devel
	fi

	# User cases
	if [[ ! -z "$TARGET_EXTRAPKGS" ]]; then
		$TARGET_RUN sudo pacman -S --needed --noconfirm $TARGET_EXTRAPKGS
	fi
	if [[ ! -z "$TARGET_ENV" ]]; then
		TARGET_ENVFILE="$CHROOT/$TARGET_UPPER/root/home/$BUILD_USER/pkgenv.sh"
		echo '#!/usr/bin/env sh' | sudo tee "$TARGET_ENVFILE" && \
		echo "$TARGET_ENV" | sudo tee -a "$TARGET_ENVFILE"
	fi

	echo '[chaotic-makepkg] Finally build it:'
	if [[ ! -z "$PKGDEST" ]]; then
		sudo mount --bind "$PKGDEST" "./root/home/$BUILD_USER/pkgdest"
		$TARGET_RUN /usr/local/bin/dest-makepkg -s $@
	else
		$TARGET_RUN /usr/local/bin/local-makepkg -s $@
	fi
	RESULT="$?"

	if [[ "$TARGET_NUKE" == '1' ]]; then
		echo '[chaotic-makepkg] Nuking...'
		sudo umount -Rv "$CHROOT/$TARGET_UPPER/root" && \
		sudo rm -rf "$CHROOT/$TARGET_UPPER" || \
		echo '[chaotic-makepkg] Unable to nuke!'
	else
		sudo umount -R "$CHROOT/$TARGET_UPPER/root"
	fi

	exit $RESULT
else
	exec makepkg $@
fi
