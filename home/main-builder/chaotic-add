#!/usr/bin/env bash

sync_ipfs(){
	echo "Syncing IPFS:"
	for sig in $_NEW_SIGS; do
		orig="${sig%.sig}"
		ohash="$(ipfs add -Q --nocopy "$orig")"
		ipfs files cp "/ipfs/$ohash" "/http/chaotic-aur/x86_64/$orig"
		shash="$(ipfs add -Q --nocopy "$sig")"
		ipfs files cp "/ipfs/$shash" "/http/chaotic-aur/x86_64/$sig"
	done
	for dbf in chaotic-aur.{db,files}.tar.gz{,.old}; do
		ohash="$(ipfs add -Q --nocopy "$dbf")"
		ipfs files rm "/http/chaotic-aur/x86_64/$dbf"
		ipfs files cp "/ipfs/$ohash" "/http/chaotic-aur/x86_64/$dbf"
	done
	ipfs name publish "$(ipfs files stat --hash /http)" &
}

cd /srv/http/chaotic-aur/x86_64
if [[ ! -f "$HOME/last-add" ]]
then
	touch -d "$(date -R -r ./chaotic-aur.db.tar.gz)" ~/last-add
fi
_NEW_SIGS="$(find *.sig -newer ~/last-add)"
if [[ "$_NEW_SIGS" != "" ]]
then
	export _PKGS=$(echo "$_NEW_SIGS" |\
		grep -Po '(.*)(?=(?:-(?:[^-]*)){3}\.pkg\.tar(?:\.xz)?\.sig)')
	echo "$_PKGS" |\
		xargs repoctl update \
		\
		&& echo "" > ~/last-add \
		\
		&& sync_ipfs \
		\
		#&& echo "Builded pkgs: $_PKGS" |\
		#tr '\n' ' ' |\
		#telegram-send --stdin
	
fi
cat chaotic-aur.db.tar.gz | tar -tvz | grep -e "^d" | awk '{print $6}' > ../pkgs.txt

~/chaotic-clean2 --quiet
